<html><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">













<meta name="keywords" content="C, C++, pointer, function, Arrays, tutorial, programming">

<meta name="description" content="This site offers C++ programming tutorials and links.">

<meta http-equiv="Window-target" content="_top">

<!-- base -->

<script type="text/javascript" language="JavaScript">

<!--

if (top.frames.length!=0)

	top.location=self.document.location;

//-->

</script>



<title>C++ Examples</title>

<link rel="stylesheet" type="text/css" href="list1_files/exocpp.css">

<script language="JavaScript" src="list1_files/cppscript.htm"></script>



</head><body>



<table width="730" border="0">

  <tbody><tr>

    <td width="100%"><script type="text/javascript"><!--

google_ad_client = "pub-3968514660870014";

google_ad_width = 728;

google_ad_height = 90;

google_ad_format = "728x90_as";

google_ad_type = "text_image";

google_ad_channel ="";

//--></script>

      <script type="text/javascript" src="list1_files/show_ads.js">

</script><script src="list1_files/expansion_embed.js"></script><script src="list1_files/test_domain.js"></script><script>google_protectAndRun("ads_core.google_render_ad", google_handleError, google_render_ad);</script><ins style="border: medium none ; margin: 0pt; padding: 0pt; display: inline-table; height: 90px; position: relative; visibility: visible; width: 728px;"><ins style="border: medium none ; margin: 0pt; padding: 0pt; display: block; height: 90px; position: relative; visibility: visible; width: 728px;"><iframe allowtransparency="true" hspace="0" id="google_ads_frame1" marginheight="0" marginwidth="0" name="google_ads_frame" src="list1_files/ads.htm" style="left: 0pt; position: absolute; top: 0pt;" vspace="0" width="728" frameborder="0" height="90" scrolling="no"></iframe></ins></ins>

    </td>

  </tr>

</tbody></table>



<table width="660" border="0" cellpadding="0" cellspacing="0">

  <tbody><tr>

    <td width="73">

      <p class="maintitle"><a href="http://www.functionx.com/cpp/index.htm"><img src="list1_files/ftxlogo2.gif" alt="FunctionX - Practical Learning Logo" width="51" border="0" height="60"></a></p></td>

    <td width="583">

      <p class="maintitle">C++ Lists: A Simple List Of Items</p></td>

  </tr>

  <tr>

    <td colspan="2" width="658" bgcolor="#0000ff" height="2"></td>

  </tr>

</tbody></table>



<table width="79%" border="0">

  <tbody><tr>

    <td width="100%">

      <p class="ParaJust">This example illustrates a simple list of items such

      as a list of integers, characters, etc.</p></td>

  </tr>

</tbody></table>

<table width="79%" border="0">

  <tbody><tr>

    <td width="100%">

      <p class="headtitle">Header File: List.h</p>

    </td>

  </tr>

  <tr>

    <td width="100%">

      <pre>//---------------------------------------------------------------------------

#ifndef ListH

#define ListH

//---------------------------------------------------------------------------

const int MaxItems = 100;

typedef double ItemType;



class FList

{

public:

    FList();

    virtual ~FList();

    int Count() const;

    bool Add(const ItemType NewItem);

    ItemType Retrieve(const int Pos);

    bool Delete(const int Pos);



private:

    int Counter;

    ItemType Item[MaxItems];

    const Index(const int Pos) const;

};

//---------------------------------------------------------------------------

#endif</pre>

    </td>

  </tr>

</tbody></table>

<table width="79%" border="0">

  <tbody><tr>

    <td width="100%">

      <p class="headtitle">Source File: List.cpp</p></td>

  </tr>

  <tr>

    <td width="100%">

      <pre>//---------------------------------------------------------------------------

#pragma hdrstop



#include "List.h"

//---------------------------------------------------------------------------

#pragma package(smart_init)

FList::FList()

    : Counter(0)

{

}

//---------------------------------------------------------------------------

FList::~FList()

{

}//---------------------------------------------------------------------------

int FList::Count() const

{

    return Counter;

}

//---------------------------------------------------------------------------

const FList::Index(const int Pos) const

{

    return Pos-1;

}

//---------------------------------------------------------------------------

bool FList::Add(const ItemType NewItem)

{

    if( (Counter &lt; 0) || (Counter &gt; MaxItems) )

        return false;

    else

    {

        Item[Counter] = NewItem;

        Counter++;

        return true;

    }

}

//---------------------------------------------------------------------------

ItemType FList::Retrieve(const int Pos)

{

    if( (Pos &lt; 0) || (Pos &gt; Counter) )

        return 0;

    else

        return Item[Pos];

}

//---------------------------------------------------------------------------

bool FList::Delete(const int Pos)

{

    if( (Pos &lt; 0) || (Pos &gt; Counter) )

        return false;

    else

    {

        for(int i = Pos+1; i &lt;= Counter; i++)

            Item[Index(i-1)] = Item[Index(i)];

        Counter--;

        return true;

    }

}

//---------------------------------------------------------------------------</pre>

    </td>

  </tr>

</tbody></table>

<table width="79%" border="0">

  <tbody><tr>

    <td width="100%">

      <p class="headtitle">Source File: Main.cpp</p></td>

  </tr>

  <tr>

    <td width="100%">

      <pre>//---------------------------------------------------------------------------

#include &lt;iostream&gt;

#include &lt;conio&gt;

using namespace std;

#pragma hdrstop

#include "List.h"

//---------------------------------------------------------------------------



#pragma argsused

int main(int argc, char* argv[])

{

    FList List;



    List.Add(1240.42);

    List.Add(283.15);

    List.Add(42.48);

    List.Add(582.12);

    List.Add(60.14);

    List.Add(8022.28);



    cout &lt;&lt; "List of items";

    for(int i = 0; i &lt; List.Count(); i++)

        cout &lt;&lt; "\nItem No." &lt;&lt; i + 1 &lt;&lt; ": " &lt;&lt; List.Retrieve(i);

    cout &lt;&lt; "\nNumber of items: " &lt;&lt; List.Count() &lt;&lt; " items\n\n";



    List.Delete(5);

    List.Delete(2);

    cout &lt;&lt; "List of items";

    for(int i = 0; i &lt; List.Count(); i++)

        cout &lt;&lt; "\nItem No." &lt;&lt; i + 1 &lt;&lt; ": " &lt;&lt; List.Retrieve(i);

    cout &lt;&lt; "\nNumber of items: " &lt;&lt; List.Count() &lt;&lt; " items\n\n";



    cout &lt;&lt; "Press any key to continue...";

    getch();

    return 0;

}

//---------------------------------------------------------------------------</pre>

    </td>

  </tr>

</tbody></table>

<table width="730" border="0">

  <tbody><tr>

    <td width="100%"><script type="text/javascript"><!--

google_ad_client = "pub-3968514660870014";

google_ad_width = 728;

google_ad_height = 90;

google_ad_format = "728x90_as";

google_ad_type = "text_image";

google_ad_channel ="";

//--></script>

      <script type="text/javascript" src="list1_files/show_ads.js">

</script><script>google_protectAndRun("ads_core.google_render_ad", google_handleError, google_render_ad);</script><ins style="border: medium none ; margin: 0pt; padding: 0pt; display: inline-table; height: 90px; position: relative; visibility: visible; width: 728px;"><ins style="border: medium none ; margin: 0pt; padding: 0pt; display: block; height: 90px; position: relative; visibility: visible; width: 728px;"><iframe allowtransparency="true" hspace="0" id="google_ads_frame2" marginheight="0" marginwidth="0" name="google_ads_frame" src="list1_files/ads_002.htm" style="left: 0pt; position: absolute; top: 0pt;" vspace="0" width="728" frameborder="0" height="90" scrolling="no"></iframe></ins></ins>

    </td>

  </tr>

</tbody></table>

&nbsp;

<table width="660" border="0">

  <tbody><tr>

    <td colspan="3" width="652">

      <hr color="#ff9900">

    </td>

  </tr>

  <tr>

    <td width="102" align="center"><a href="http://www.functionx.com/cpp/examples/index.htm">Home</a></td>

    <td width="433" align="center"><a href="http://www.functionx.com/cpp/index.htm">Copyright 2003

      FunctionX, Inc.</a></td>

    <td width="105" align="center"></td>

  </tr>

  <tr>

    <td colspan="3" width="652">

      <hr color="#ff9900">

    </td>

  </tr>

</tbody></table>

</body></html>